% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PDF.R
\docType{class}
\name{PDF}
\alias{PDF}
\title{Convert pdf document to plain text/XML.}
\arguments{
\item{filename_pdf}{path to a pdf document}

\item{first}{first page of the pdf document to be included}

\item{last}{last page of the pdf document to be included}

\item{jitter}{points up and down for reconstructing tilted lines}

\item{deviation}{points that lines may deviate from middle of page}

\item{margins}{named vector (top, bottom, left, right)}

\item{root}{name of the root node}

\item{metadata}{named character vector, attribtutes of root node of output xml document}

\item{filename}{character vector}
}
\description{
To get the margins of the text: Use Rechteckige Auswahl, and Werkzeuge/Allgemeine Informationen
}
\section{Fields}{

\describe{
\item{\code{filename_pdf}}{a character vector (length 1) providing a filename}

\item{\code{first}}{first integer, the first page}

\item{\code{last}}{last integer, the last page}

\item{\code{importFrom}}{xml2 read_xml xml_find_all xml_attrs}

\item{\code{xml}}{parsed xml}

\item{\code{text}}{a list of character vectors}

\item{\code{jitter}}{integer, the deviation in lines that will be checked}

\item{\code{margin}}{a named integer vector ("top", "bottom", "left", "right") indicating the margins of the text}

\item{\code{deviation}}{allowed deviation of columns from page center}

\item{\code{xmlification}}{xml to output}
}}

\section{Methods}{

\describe{
\item{\code{applyMargins()}}{Remove anything that is printed on pages beyond the margins given.}

\item{\code{concatenate()}}{Reconstruct paragraphs based on the following heuristic: If a line ends with a hyphen
and is not stump, lines are concatenated.}

\item{\code{decolumnize()}}{Do away with columns, if pages include two columns.}

\item{\code{getPagesizes()}}{Get page width and height.}

\item{\code{getText()}}{Extract text from pages.}

\item{\code{initialize(filename_pdf, first = NA, last = NA, jitter = 2,
  deviation = 10L, margins = integer())}}{Initialize a new instance of the class PDF to process a pdf document.}

\item{\code{parse()}}{Parse a pdf document, i.e. turn it into a raw XML document kept in the field xml.}

\item{\code{purge()}}{Remove noise, surplus whitespace signs from the text.}

\item{\code{write(filename)}}{Save xmlified document to a file.}

\item{\code{xmlify(root = "document", metadata = NULL)}}{Turn text in the pages fild into a XML document.}
}}

\examples{
\dontrun{
P <- PDF$new(filename_pdf = "/Users/blaette/Lab/tmp/cdu.pdf", first = 7, last = 119)
P$parse()
P$getPagesizes()
P$margins <- c(top = 120L, bottom = 1262L, left = 55L, right = 892L)
P$applyMargins()
P$getText()
P$concatenate()
P$purge()
P$xmlify()
P$write(filename = "/Users/blaette/Lab/tmp/cdu.xml")

plenaryprotocol <- system.file(package = "pdf2xml", "extdata", "pdf", "18238.pdf")
P <- PDF$new(filename_pdf = plenaryprotocol, first = 5, last = 73)
P$parse()
P$margins <- c(top = 70L, bottom = 1262L, left = 70L, right = 800L)
P$applyMargins()
P$deviation <- 10L
P$decolumnize()
P$getText()
}
}
